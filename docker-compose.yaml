services:
  postgres:
    image: postgres:16-alpine
    container_name: library-db
    ports:
      - "${POSTGRES_PORT:-5544}:5432"
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-library_db}
      POSTGRES_USER: ${POSTGRES_USER:-library_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-library_password}
      PGDATA: /var/lib/postgresql/data
    volumes:
      - postgres_data:/var/lib/postgresql/data
    command: postgres -c 'max_connections=1000'
    networks:
      - library-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-library_user} -d ${POSTGRES_DB:-library_db}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: "no"

  app:
    build: .
    container_name: library-app
    ports:
      - "${SERVER_PORT:-9000}:9000"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/${POSTGRES_DB:-library_db}
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER:-library_user}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD:-library_password}
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT: org.hibernate.dialect.PostgreSQLDialect
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE:-local}
      SERVER_PORT: 9000
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - library-network
    restart: unless-stopped

volumes:
  postgres_data:
    name: library-postgres-data

networks:
  library-network:
    name: library-network
    driver: bridge